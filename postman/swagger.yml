openapi: 3.0.0
info:
  title: cartera
  version: 1.0.0
servers:
  - url: http://{{url}}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    undefinedAuth:
      type: http
tags:
  - name: admin
    description: admin APIs
  - name: admin > card
    description: card Model APIs
  - name: admin > Social Login
    description: Login Through Social Accounts
  - name: admin > File Upload
    description: Upload Files
  - name: admin > Customer
    description: Customer Model APIs
  - name: admin > user
    description: user Model APIs
  - name: admin > login
    description: admin Login
  - name: admin > role
    description: role Model APIs
  - name: admin > projectRoute
    description: projectRoute Model APIs
  - name: admin > routeRole
    description: routeRole Model APIs
  - name: admin > userRole
    description: userRole Model APIs
  - name: device
    description: device APIs
  - name: device > card
    description: card Model APIs
  - name: device > Social Login
    description: Login Through Social Accounts
  - name: device > File Upload
    description: Upload Files
  - name: device > Customer
    description: Customer Model APIs
  - name: device > user
    description: user Model APIs
  - name: device > login
    description: device Login
paths:
  /admin/card/{id}:
    get:
      tags:
        - admin > card
      summary: getcard
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Marjorie Wunsch
                  string: Agent
                  expirationDate: '2024-04-14T04:33:56.761Z'
                  userID: Brazilian
                  cardType: Bedfordshire
                  status: Land
                  isDefault: false
                  id: 6548dc17f300e1706f3b8532
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-10T15:06:45.463Z'
                  updatedAt: '2024-07-13T06:47:37.721Z'
  /admin/card/create:
    post:
      tags:
        - admin > card
      summary: addcard
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"name\": \"Marjorie Wunsch\",\n  \"string\":
                \"Agent\",\n  \"expirationDate\":
                \"2024-04-14T04:33:56.761Z\",\n  \"userID\": \"Brazilian\",\n 
                \"cardType\": \"Bedfordshire\",\n  \"status\": \"Land\",\n 
                \"isDefault\": false\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Marjorie Wunsch
                  string: Agent
                  expirationDate: '2024-04-14T04:33:56.761Z'
                  userID: Brazilian
                  cardType: Bedfordshire
                  status: Land
                  isDefault: false
                  id: 6548dc17f300e1706f3b8530
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-10T15:06:45.463Z'
                  updatedAt: '2024-07-13T06:47:37.721Z'
  /admin/card/list:
    post:
      tags:
        - admin > card
      summary: findAllcard
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"query\": {},\n  \"options\": {\n    \"select\": [\n     
                \"field 1\",\n      \"field 2\"\n    ],\n    \"collation\":
                \"\",\n    \"sort\": \"\",\n    \"populate\": \"\",\n   
                \"projection\": \"\",\n    \"lean\": false,\n    \"leanWithId\":
                true,\n    \"offset\": 0,\n    \"page\": 1,\n    \"limit\":
                10,\n    \"pagination\": true,\n    \"useEstimatedCount\":
                false,\n    \"useCustomCountFn\": false,\n    \"forceCountFn\":
                false,\n    \"read\": {},\n    \"options\": {}\n  },\n 
                \"isCountOnly\": false\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Marjorie Wunsch
                      string: Agent
                      expirationDate: '2024-04-14T04:33:56.761Z'
                      userID: Brazilian
                      cardType: Bedfordshire
                      status: Land
                      isDefault: false
                      id: 6548dc17f300e1706f3b8531
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-10-10T15:06:45.463Z'
                      updatedAt: '2024-07-13T06:47:37.721Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/card/count:
    post:
      tags:
        - admin > card
      summary: getcardCount
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"where\": {\n    \"isActive\": true\n  }\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/card/addBulk:
    post:
      tags:
        - admin > card
      summary: insertBulkcard
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"data\": [\n    {\n      \"name\": \"Marjorie
                Wunsch\",\n      \"string\": \"Agent\",\n     
                \"expirationDate\": \"2024-04-14T04:33:56.761Z\",\n     
                \"userID\": \"Brazilian\",\n      \"cardType\":
                \"Bedfordshire\",\n      \"status\": \"Land\",\n     
                \"isDefault\": false\n    }\n  ]\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/card/deleteMany:
    post:
      tags:
        - admin > card
      summary: deleteManycard
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"isWarning\": true,\n  \"ids\": [\n    \":id\"\n  ]\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/card/update/{id}:
    put:
      tags:
        - admin > card
      summary: updatecard
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"name\": \"Marjorie Wunsch\",\n  \"string\":
                \"Agent\",\n  \"expirationDate\":
                \"2024-04-14T04:33:56.761Z\",\n  \"userID\": \"Brazilian\",\n 
                \"cardType\": \"Bedfordshire\",\n  \"status\": \"Land\",\n 
                \"isDefault\": false\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Marjorie Wunsch
                  string: Agent
                  expirationDate: '2024-04-14T04:33:56.761Z'
                  userID: Brazilian
                  cardType: Bedfordshire
                  status: Land
                  isDefault: false
                  id: 6548dc17f300e1706f3b8533
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-10T15:06:45.463Z'
                  updatedAt: '2024-07-13T06:47:37.721Z'
  /admin/card/partial-update/{id}:
    put:
      tags:
        - admin > card
      summary: partialupdatecard
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"isActive\": true,\n  \"isDeleted\": false\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Marjorie Wunsch
                  string: Agent
                  expirationDate: '2024-04-14T04:33:56.761Z'
                  userID: Brazilian
                  cardType: Bedfordshire
                  status: Land
                  isDefault: false
                  id: 6548dc17f300e1706f3b8534
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-10T15:06:45.463Z'
                  updatedAt: '2024-07-13T06:47:37.721Z'
  /admin/card/softDelete/{id}:
    put:
      tags:
        - admin > card
      summary: softDeletecard
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/card/softDeleteMany:
    put:
      tags:
        - admin > card
      summary: softDeleteManycard
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"ids\": [\n    \":id\"\n  ]\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/card/updateBulk:
    put:
      tags:
        - admin > card
      summary: updateBulkcard
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"filter\": {\n    \"isActive\": true\n  },\n  \"data\":
                {\n    \"isDeleted\": false\n  }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/card/delete/{id}:
    delete:
      tags:
        - admin > card
      summary: deletecard
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/auth/login/github:
    get:
      tags:
        - admin > Social Login
      summary: Social Login through github
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/upload:
    post:
      tags:
        - admin > File Upload
      summary: File upload in admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: string
                  description: Select file/s to upload
                  format: binary
                folder:
                  type: string
                  description: Optional, enable to upload file to specific folder
                  example: Enter foldername
                fileName:
                  type: string
                  description: Optional, enable to give Specific file name to uploaded File
                  example: Enter fileName
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  - status: true
                    path: path to download file
  /admin/customer/{id}:
    get:
      tags:
        - admin > Customer
      summary: getCustomer
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  firstName: Ira Lesch
                  lastName: Kristine Okuneva
                  name: Johnnie Paucek
                  profile: maximize
                  contactNumber: Regional
                  email: Prince_Pacocha@hotmail.com
                  id: 6548dc17f300e1706f3b8541
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-01-12T03:31:00.985Z'
                  updatedAt: '2024-10-17T04:40:07.322Z'
  /admin/customer/create:
    post:
      tags:
        - admin > Customer
      summary: addCustomer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"firstName\": \"Ira Lesch\",\n  \"lastName\": \"Kristine
                Okuneva\",\n  \"name\": \"Johnnie Paucek\",\n  \"profile\":
                \"maximize\",\n  \"contactNumber\": \"Regional\",\n  \"email\":
                \"Prince_Pacocha@hotmail.com\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  firstName: Ira Lesch
                  lastName: Kristine Okuneva
                  name: Johnnie Paucek
                  profile: maximize
                  contactNumber: Regional
                  email: Prince_Pacocha@hotmail.com
                  id: 6548dc17f300e1706f3b853f
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-01-12T03:31:00.985Z'
                  updatedAt: '2024-10-17T04:40:07.322Z'
  /admin/customer/list:
    post:
      tags:
        - admin > Customer
      summary: findAllCustomer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"query\": {},\n  \"options\": {\n    \"select\": [\n     
                \"field 1\",\n      \"field 2\"\n    ],\n    \"collation\":
                \"\",\n    \"sort\": \"\",\n    \"populate\": \"\",\n   
                \"projection\": \"\",\n    \"lean\": false,\n    \"leanWithId\":
                true,\n    \"offset\": 0,\n    \"page\": 1,\n    \"limit\":
                10,\n    \"pagination\": true,\n    \"useEstimatedCount\":
                false,\n    \"useCustomCountFn\": false,\n    \"forceCountFn\":
                false,\n    \"read\": {},\n    \"options\": {}\n  },\n 
                \"isCountOnly\": false\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - firstName: Ira Lesch
                      lastName: Kristine Okuneva
                      name: Johnnie Paucek
                      profile: maximize
                      contactNumber: Regional
                      email: Prince_Pacocha@hotmail.com
                      id: 6548dc17f300e1706f3b8540
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-01-12T03:31:00.985Z'
                      updatedAt: '2024-10-17T04:40:07.322Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/customer/count:
    post:
      tags:
        - admin > Customer
      summary: getCustomerCount
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"where\": {\n    \"isActive\": true\n  }\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/customer/addBulk:
    post:
      tags:
        - admin > Customer
      summary: insertBulkCustomer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"data\": [\n    {\n      \"firstName\": \"Ira
                Lesch\",\n      \"lastName\": \"Kristine Okuneva\",\n     
                \"name\": \"Johnnie Paucek\",\n      \"profile\":
                \"maximize\",\n      \"contactNumber\": \"Regional\",\n     
                \"email\": \"Prince_Pacocha@hotmail.com\"\n    }\n  ]\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/customer/deleteMany:
    post:
      tags:
        - admin > Customer
      summary: deleteManyCustomer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"isWarning\": true,\n  \"ids\": [\n    \":id\"\n  ]\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/customer/update/{id}:
    put:
      tags:
        - admin > Customer
      summary: updateCustomer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"firstName\": \"Ira Lesch\",\n  \"lastName\": \"Kristine
                Okuneva\",\n  \"name\": \"Johnnie Paucek\",\n  \"profile\":
                \"maximize\",\n  \"contactNumber\": \"Regional\",\n  \"email\":
                \"Prince_Pacocha@hotmail.com\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  firstName: Ira Lesch
                  lastName: Kristine Okuneva
                  name: Johnnie Paucek
                  profile: maximize
                  contactNumber: Regional
                  email: Prince_Pacocha@hotmail.com
                  id: 6548dc17f300e1706f3b8542
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-01-12T03:31:00.985Z'
                  updatedAt: '2024-10-17T04:40:07.322Z'
  /admin/customer/partial-update/{id}:
    put:
      tags:
        - admin > Customer
      summary: partialupdateCustomer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"isActive\": true,\n  \"isDeleted\": false\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  firstName: Ira Lesch
                  lastName: Kristine Okuneva
                  name: Johnnie Paucek
                  profile: maximize
                  contactNumber: Regional
                  email: Prince_Pacocha@hotmail.com
                  id: 6548dc17f300e1706f3b8543
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-01-12T03:31:00.985Z'
                  updatedAt: '2024-10-17T04:40:07.322Z'
  /admin/customer/softDelete/{id}:
    put:
      tags:
        - admin > Customer
      summary: softDeleteCustomer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/customer/softDeleteMany:
    put:
      tags:
        - admin > Customer
      summary: softDeleteManyCustomer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"ids\": [\n    \":id\"\n  ]\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/customer/updateBulk:
    put:
      tags:
        - admin > Customer
      summary: updateBulkCustomer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"filter\": {\n    \"isActive\": true\n  },\n  \"data\":
                {\n    \"isDeleted\": false\n  }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/customer/delete/{id}:
    delete:
      tags:
        - admin > Customer
      summary: deleteCustomer
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/user/{id}:
    get:
      tags:
        - admin > user
      summary: getuser
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Elyssa51
                  email: Harold.Bauch@gmail.com
                  name: Curtis Wuckert
                  mobileNo: (241) 363-8274
                  userType: 1
                  id: 6548dc17f300e1706f3b8550
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-01-05T23:49:38.103Z'
                  updatedAt: '2024-02-13T06:59:09.045Z'
  /admin/user/me:
    get:
      tags:
        - admin > user
      summary: get loggedin User
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Elyssa51
                  email: Harold.Bauch@gmail.com
                  name: Curtis Wuckert
                  mobileNo: (241) 363-8274
                  userType: 1
                  id: 6548dc17f300e1706f3b8556
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-01-05T23:49:38.103Z'
                  updatedAt: '2024-02-13T06:59:09.045Z'
  /admin/user/create:
    post:
      tags:
        - admin > user
      summary: adduser
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"username\": \"Elyssa51\",\n  \"password\":
                \"K8aIcHj8LCJKLta\",\n  \"email\":
                \"Harold.Bauch@gmail.com\",\n  \"name\": \"Curtis Wuckert\",\n 
                \"mobileNo\": \"(241) 363-8274\",\n  \"userType\": 1\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Elyssa51
                  email: Harold.Bauch@gmail.com
                  name: Curtis Wuckert
                  mobileNo: (241) 363-8274
                  userType: 1
                  id: 6548dc17f300e1706f3b854e
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-01-05T23:49:38.103Z'
                  updatedAt: '2024-02-13T06:59:09.045Z'
  /admin/user/list:
    post:
      tags:
        - admin > user
      summary: findAlluser
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"query\": {},\n  \"options\": {\n    \"select\": [\n     
                \"field 1\",\n      \"field 2\"\n    ],\n    \"collation\":
                \"\",\n    \"sort\": \"\",\n    \"populate\": \"\",\n   
                \"projection\": \"\",\n    \"lean\": false,\n    \"leanWithId\":
                true,\n    \"offset\": 0,\n    \"page\": 1,\n    \"limit\":
                10,\n    \"pagination\": true,\n    \"useEstimatedCount\":
                false,\n    \"useCustomCountFn\": false,\n    \"forceCountFn\":
                false,\n    \"read\": {},\n    \"options\": {}\n  },\n 
                \"isCountOnly\": false\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - username: Elyssa51
                      email: Harold.Bauch@gmail.com
                      name: Curtis Wuckert
                      mobileNo: (241) 363-8274
                      userType: 1
                      id: 6548dc17f300e1706f3b854f
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-01-05T23:49:38.103Z'
                      updatedAt: '2024-02-13T06:59:09.045Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/user/count:
    post:
      tags:
        - admin > user
      summary: getuserCount
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"where\": {\n    \"isActive\": true\n  }\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/user/addBulk:
    post:
      tags:
        - admin > user
      summary: insertBulkuser
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"data\": [\n    {\n      \"username\":
                \"Elyssa51\",\n      \"password\": \"K8aIcHj8LCJKLta\",\n     
                \"email\": \"Harold.Bauch@gmail.com\",\n      \"name\": \"Curtis
                Wuckert\",\n      \"mobileNo\": \"(241) 363-8274\",\n     
                \"userType\": 1\n    }\n  ]\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/user/deleteMany:
    post:
      tags:
        - admin > user
      summary: deleteManyuser
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"isWarning\": true,\n  \"ids\": [\n    \":id\"\n  ]\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/user/update/{id}:
    put:
      tags:
        - admin > user
      summary: updateuser
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"username\": \"Elyssa51\",\n  \"password\":
                \"K8aIcHj8LCJKLta\",\n  \"email\":
                \"Harold.Bauch@gmail.com\",\n  \"name\": \"Curtis Wuckert\",\n 
                \"mobileNo\": \"(241) 363-8274\",\n  \"userType\": 1\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Elyssa51
                  email: Harold.Bauch@gmail.com
                  name: Curtis Wuckert
                  mobileNo: (241) 363-8274
                  userType: 1
                  id: 6548dc17f300e1706f3b8551
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-01-05T23:49:38.103Z'
                  updatedAt: '2024-02-13T06:59:09.045Z'
  /admin/user/partial-update/{id}:
    put:
      tags:
        - admin > user
      summary: partialupdateuser
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"isActive\": true,\n  \"isDeleted\": false\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Elyssa51
                  email: Harold.Bauch@gmail.com
                  name: Curtis Wuckert
                  mobileNo: (241) 363-8274
                  userType: 1
                  id: 6548dc17f300e1706f3b8552
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-01-05T23:49:38.103Z'
                  updatedAt: '2024-02-13T06:59:09.045Z'
  /admin/user/softDelete/{id}:
    put:
      tags:
        - admin > user
      summary: softDeleteuser
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/user/softDeleteMany:
    put:
      tags:
        - admin > user
      summary: softDeleteManyuser
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"ids\": [\n    \":id\"\n  ]\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/user/updateBulk:
    put:
      tags:
        - admin > user
      summary: updateBulkuser
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"filter\": {\n    \"isActive\": true\n  },\n  \"data\":
                {\n    \"isDeleted\": false\n  }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/user/update-profile:
    put:
      tags:
        - admin > user
      summary: updateProfile
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"username\": \"Elyssa51\",\n  \"password\":
                \"K8aIcHj8LCJKLta\",\n  \"email\":
                \"Harold.Bauch@gmail.com\",\n  \"name\": \"Curtis Wuckert\",\n 
                \"mobileNo\": \"(241) 363-8274\",\n  \"userType\": 1\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Elyssa51
                  email: Harold.Bauch@gmail.com
                  name: Curtis Wuckert
                  mobileNo: (241) 363-8274
                  userType: 1
                  id: 6548dc17f300e1706f3b8555
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-01-05T23:49:38.103Z'
                  updatedAt: '2024-02-13T06:59:09.045Z'
  /admin/user/delete/{id}:
    delete:
      tags:
        - admin > user
      summary: deleteuser
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/auth/login:
    post:
      tags:
        - admin > login
      summary: Login in admin
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"username\": \"username\",\n  \"password\":
                \"password\"\n}"
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Login Successful
                data:
                  username: Elyssa51
                  email: Harold.Bauch@gmail.com
                  name: Curtis Wuckert
                  mobileNo: (241) 363-8274
                  id: 6548dc17f300e1706f3b8557
                  loginRetryLimit: 0
                  token: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMWRlZDVjMGFjMjAxMmFjMDI4ODkxZiIsInVzZXJuYW1lIjoiYWRtaW4iLCJpYXQiOjE2MjkzNTEyNzAsImV4cCI6MTYyOTk1MTI3MH0.BJ-WKjNYeFDQ4pn8kfli5gwn6GLz_c3voFht20Agj9k
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-04-29T01:23:17.809Z'
                  updatedAt: '2024-02-17T05:27:26.317Z'
  /admin/auth/register:
    post:
      tags:
        - admin > login
      summary: Register User in admin
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"username\": \"Elyssa51\",\n  \"password\":
                \"K8aIcHj8LCJKLta\",\n  \"email\":
                \"Harold.Bauch@gmail.com\",\n  \"name\": \"Curtis Wuckert\",\n 
                \"mobileNo\": \"(241) 363-8274\"\n}"
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Elyssa51
                  email: Harold.Bauch@gmail.com
                  name: Curtis Wuckert
                  mobileNo: (241) 363-8274
                  id: 6548dc17f300e1706f3b8557
                  loginRetryLimit: 0
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-04-29T01:23:17.809Z'
                  updatedAt: '2024-02-17T05:27:26.317Z'
  /admin/auth/forgot-password:
    post:
      tags:
        - admin > login
      summary: Forgot Password in admin
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"email\": \"yourmail@gmail.com\"\n}"'
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: otp successfully send to your email.
                data: {}
  /admin/auth/validate-otp:
    post:
      tags:
        - admin > login
      summary: Validate OTP in admin
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"otp\": \"5898\"\n}"'
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Invalid OTP
                data: {}
  /admin/auth/logout:
    post:
      tags:
        - admin > login
      summary: Logout in admin
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/user/change-password:
    put:
      tags:
        - admin > login
      summary: Change Password in admin
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"oldPassword\": \"OldPassword\",\n  \"newPassword\":
                \"NewPassword\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Password changed successfully
                data: {}
  /admin/auth/reset-password:
    put:
      tags:
        - admin > login
      summary: Reset password in admin
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"code\": \"5898\",\n  \"newPassword\":
                \"yourPassword\"\n}"
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Password reset successfully
                data: {}
  /admin/role/{id}:
    get:
      tags:
        - admin > role
      summary: getrole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Genevieve O'Reilly
                  code: SDD
                  weight: 245
                  id: 6548dc17f300e1706f3b8564
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-04-24T21:05:18.358Z'
                  updatedAt: '2024-10-03T08:25:53.413Z'
  /admin/role/create:
    post:
      tags:
        - admin > role
      summary: addrole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"name\": \"Genevieve O'Reilly\",\n  \"code\": \"SDD\",\n 
                \"weight\": 245\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Genevieve O'Reilly
                  code: SDD
                  weight: 245
                  id: 6548dc17f300e1706f3b855e
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-04-24T21:05:18.358Z'
                  updatedAt: '2024-10-03T08:25:53.413Z'
  /admin/role/addBulk:
    post:
      tags:
        - admin > role
      summary: insertBulkrole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"data\": [\n    {\n      \"name\": \"Genevieve
                O'Reilly\",\n      \"code\": \"SDD\",\n      \"weight\":
                245\n    }\n  ]\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/role/list:
    post:
      tags:
        - admin > role
      summary: findAllrole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"query\": {},\n  \"options\": {\n    \"select\": [\n     
                \"field 1\",\n      \"field 2\"\n    ],\n    \"collation\":
                \"\",\n    \"sort\": \"\",\n    \"populate\": \"\",\n   
                \"projection\": \"\",\n    \"lean\": false,\n    \"leanWithId\":
                true,\n    \"offset\": 0,\n    \"page\": 1,\n    \"limit\":
                10,\n    \"pagination\": true,\n    \"useEstimatedCount\":
                false,\n    \"useCustomCountFn\": false,\n    \"forceCountFn\":
                false,\n    \"read\": {},\n    \"options\": {}\n  },\n 
                \"isCountOnly\": false\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Genevieve O'Reilly
                      code: SDD
                      weight: 245
                      id: 6548dc17f300e1706f3b8560
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-04-24T21:05:18.358Z'
                      updatedAt: '2024-10-03T08:25:53.413Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/role/count:
    post:
      tags:
        - admin > role
      summary: getroleCount
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"where\": {\n    \"isActive\": true\n  }\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/role/deleteMany:
    post:
      tags:
        - admin > role
      summary: deleteManyrole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"isWarning\": true,\n  \"ids\": [\n    \":id\"\n  ]\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/role/updateBulk:
    put:
      tags:
        - admin > role
      summary: updateBulkrole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"filter\": {\n    \"isActive\": true\n  },\n  \"data\":
                {\n    \"isDeleted\": false\n  }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/role/softDeleteMany:
    put:
      tags:
        - admin > role
      summary: softDeleteManyrole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"ids\": [\n    \":id\"\n  ]\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/role/softDelete/{id}:
    put:
      tags:
        - admin > role
      summary: softDeleterole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/role/partial-update/{id}:
    put:
      tags:
        - admin > role
      summary: partialupdaterole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"isActive\": true,\n  \"isDeleted\": false\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Genevieve O'Reilly
                  code: SDD
                  weight: 245
                  id: 6548dc17f300e1706f3b8562
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-04-24T21:05:18.358Z'
                  updatedAt: '2024-10-03T08:25:53.413Z'
  /admin/role/update/{id}:
    put:
      tags:
        - admin > role
      summary: updaterole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"name\": \"Genevieve O'Reilly\",\n  \"code\": \"SDD\",\n 
                \"weight\": 245\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Genevieve O'Reilly
                  code: SDD
                  weight: 245
                  id: 6548dc17f300e1706f3b8563
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-04-24T21:05:18.358Z'
                  updatedAt: '2024-10-03T08:25:53.413Z'
  /admin/role/delete/{id}:
    delete:
      tags:
        - admin > role
      summary: deleterole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/projectroute/{id}:
    get:
      tags:
        - admin > projectRoute
      summary: getprojectRoute
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: Account
                  method: Prairie
                  uri: Account
                  id: 6548dc17f300e1706f3b856c
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-02-18T16:12:54.356Z'
                  updatedAt: '2024-09-10T07:13:07.296Z'
  /admin/projectroute/create:
    post:
      tags:
        - admin > projectRoute
      summary: addprojectRoute
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"route_name\": \"Account\",\n  \"method\":
                \"Prairie\",\n  \"uri\": \"Account\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: Account
                  method: Prairie
                  uri: Account
                  id: 6548dc17f300e1706f3b8566
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-02-18T16:12:54.356Z'
                  updatedAt: '2024-09-10T07:13:07.296Z'
  /admin/projectroute/addBulk:
    post:
      tags:
        - admin > projectRoute
      summary: insertBulkprojectRoute
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"data\": [\n    {\n      \"route_name\":
                \"Account\",\n      \"method\": \"Prairie\",\n      \"uri\":
                \"Account\"\n    }\n  ]\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/projectroute/list:
    post:
      tags:
        - admin > projectRoute
      summary: findAllprojectRoute
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"query\": {},\n  \"options\": {\n    \"select\": [\n     
                \"field 1\",\n      \"field 2\"\n    ],\n    \"collation\":
                \"\",\n    \"sort\": \"\",\n    \"populate\": \"\",\n   
                \"projection\": \"\",\n    \"lean\": false,\n    \"leanWithId\":
                true,\n    \"offset\": 0,\n    \"page\": 1,\n    \"limit\":
                10,\n    \"pagination\": true,\n    \"useEstimatedCount\":
                false,\n    \"useCustomCountFn\": false,\n    \"forceCountFn\":
                false,\n    \"read\": {},\n    \"options\": {}\n  },\n 
                \"isCountOnly\": false\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - route_name: Account
                      method: Prairie
                      uri: Account
                      id: 6548dc17f300e1706f3b8568
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-02-18T16:12:54.356Z'
                      updatedAt: '2024-09-10T07:13:07.296Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/projectroute/count:
    post:
      tags:
        - admin > projectRoute
      summary: getprojectRouteCount
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"where\": {\n    \"isActive\": true\n  }\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/projectroute/deleteMany:
    post:
      tags:
        - admin > projectRoute
      summary: deleteManyprojectRoute
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"isWarning\": true,\n  \"ids\": [\n    \":id\"\n  ]\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/projectroute/updateBulk:
    put:
      tags:
        - admin > projectRoute
      summary: updateBulkprojectRoute
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"filter\": {\n    \"isActive\": true\n  },\n  \"data\":
                {\n    \"isDeleted\": false\n  }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/projectroute/softDeleteMany:
    put:
      tags:
        - admin > projectRoute
      summary: softDeleteManyprojectRoute
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"ids\": [\n    \":id\"\n  ]\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/projectroute/softDelete/{id}:
    put:
      tags:
        - admin > projectRoute
      summary: softDeleteprojectRoute
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/projectroute/partial-update/{id}:
    put:
      tags:
        - admin > projectRoute
      summary: partialupdateprojectRoute
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"isActive\": true,\n  \"isDeleted\": false\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: Account
                  method: Prairie
                  uri: Account
                  id: 6548dc17f300e1706f3b856a
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-02-18T16:12:54.356Z'
                  updatedAt: '2024-09-10T07:13:07.296Z'
  /admin/projectroute/update/{id}:
    put:
      tags:
        - admin > projectRoute
      summary: updateprojectRoute
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"route_name\": \"Account\",\n  \"method\":
                \"Prairie\",\n  \"uri\": \"Account\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: Account
                  method: Prairie
                  uri: Account
                  id: 6548dc17f300e1706f3b856b
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-02-18T16:12:54.356Z'
                  updatedAt: '2024-09-10T07:13:07.296Z'
  /admin/projectroute/delete/{id}:
    delete:
      tags:
        - admin > projectRoute
      summary: deleteprojectRoute
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/routerole/{id}:
    get:
      tags:
        - admin > routeRole
      summary: getrouteRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 6548dc17f300e1706f3b856d
                  roleId: 6548dc17f300e1706f3b856e
                  id: 6548dc17f300e1706f3b8576
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-12-09T10:38:18.566Z'
                  updatedAt: '2024-07-03T04:58:07.772Z'
  /admin/routerole/create:
    post:
      tags:
        - admin > routeRole
      summary: addrouteRole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"routeId\": \"6548dc17f300e1706f3b856d\",\n  \"roleId\":
                \"6548dc17f300e1706f3b856e\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 6548dc17f300e1706f3b856d
                  roleId: 6548dc17f300e1706f3b856e
                  id: 6548dc17f300e1706f3b8570
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-12-09T10:38:18.566Z'
                  updatedAt: '2024-07-03T04:58:07.772Z'
  /admin/routerole/addBulk:
    post:
      tags:
        - admin > routeRole
      summary: insertBulkrouteRole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"data\": [\n    {\n      \"routeId\":
                \"6548dc17f300e1706f3b856d\",\n      \"roleId\":
                \"6548dc17f300e1706f3b856e\"\n    }\n  ]\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/routerole/list:
    post:
      tags:
        - admin > routeRole
      summary: findAllrouteRole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"query\": {},\n  \"options\": {\n    \"select\": [\n     
                \"field 1\",\n      \"field 2\"\n    ],\n    \"collation\":
                \"\",\n    \"sort\": \"\",\n    \"populate\": \"\",\n   
                \"projection\": \"\",\n    \"lean\": false,\n    \"leanWithId\":
                true,\n    \"offset\": 0,\n    \"page\": 1,\n    \"limit\":
                10,\n    \"pagination\": true,\n    \"useEstimatedCount\":
                false,\n    \"useCustomCountFn\": false,\n    \"forceCountFn\":
                false,\n    \"read\": {},\n    \"options\": {}\n  },\n 
                \"isCountOnly\": false\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - routeId: 6548dc17f300e1706f3b856d
                      roleId: 6548dc17f300e1706f3b856e
                      id: 6548dc17f300e1706f3b8572
                      isDeleted: false
                      isActive: true
                      createdAt: '2023-12-09T10:38:18.566Z'
                      updatedAt: '2024-07-03T04:58:07.772Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/routerole/count:
    post:
      tags:
        - admin > routeRole
      summary: getrouteRoleCount
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"where\": {\n    \"isActive\": true\n  }\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/routerole/deleteMany:
    post:
      tags:
        - admin > routeRole
      summary: deleteManyrouteRole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"isWarning\": true,\n  \"ids\": [\n    \":id\"\n  ]\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/routerole/updateBulk:
    put:
      tags:
        - admin > routeRole
      summary: updateBulkrouteRole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"filter\": {\n    \"isActive\": true\n  },\n  \"data\":
                {\n    \"isDeleted\": false\n  }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/routerole/softDeleteMany:
    put:
      tags:
        - admin > routeRole
      summary: softDeleteManyrouteRole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"ids\": [\n    \":id\"\n  ]\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/routerole/softDelete/{id}:
    put:
      tags:
        - admin > routeRole
      summary: softDeleterouteRole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/routerole/partial-update/{id}:
    put:
      tags:
        - admin > routeRole
      summary: partialupdaterouteRole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"isActive\": true,\n  \"isDeleted\": false\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 6548dc17f300e1706f3b856d
                  roleId: 6548dc17f300e1706f3b856e
                  id: 6548dc17f300e1706f3b8574
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-12-09T10:38:18.566Z'
                  updatedAt: '2024-07-03T04:58:07.772Z'
  /admin/routerole/update/{id}:
    put:
      tags:
        - admin > routeRole
      summary: updaterouteRole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"routeId\": \"6548dc17f300e1706f3b856d\",\n  \"roleId\":
                \"6548dc17f300e1706f3b856e\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 6548dc17f300e1706f3b856d
                  roleId: 6548dc17f300e1706f3b856e
                  id: 6548dc17f300e1706f3b8575
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-12-09T10:38:18.566Z'
                  updatedAt: '2024-07-03T04:58:07.772Z'
  /admin/routerole/delete/{id}:
    delete:
      tags:
        - admin > routeRole
      summary: deleterouteRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/userrole/{id}:
    get:
      tags:
        - admin > userRole
      summary: getuserRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 6548dc17f300e1706f3b8577
                  roleId: 6548dc17f300e1706f3b8578
                  id: 6548dc17f300e1706f3b8580
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-06-04T16:51:26.502Z'
                  updatedAt: '2023-11-25T02:53:54.350Z'
  /admin/userrole/create:
    post:
      tags:
        - admin > userRole
      summary: adduserRole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"userId\": \"6548dc17f300e1706f3b8577\",\n  \"roleId\":
                \"6548dc17f300e1706f3b8578\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 6548dc17f300e1706f3b8577
                  roleId: 6548dc17f300e1706f3b8578
                  id: 6548dc17f300e1706f3b857a
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-06-04T16:51:26.502Z'
                  updatedAt: '2023-11-25T02:53:54.350Z'
  /admin/userrole/addBulk:
    post:
      tags:
        - admin > userRole
      summary: insertBulkuserRole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"data\": [\n    {\n      \"userId\":
                \"6548dc17f300e1706f3b8577\",\n      \"roleId\":
                \"6548dc17f300e1706f3b8578\"\n    }\n  ]\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/userrole/list:
    post:
      tags:
        - admin > userRole
      summary: findAlluserRole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"query\": {},\n  \"options\": {\n    \"select\": [\n     
                \"field 1\",\n      \"field 2\"\n    ],\n    \"collation\":
                \"\",\n    \"sort\": \"\",\n    \"populate\": \"\",\n   
                \"projection\": \"\",\n    \"lean\": false,\n    \"leanWithId\":
                true,\n    \"offset\": 0,\n    \"page\": 1,\n    \"limit\":
                10,\n    \"pagination\": true,\n    \"useEstimatedCount\":
                false,\n    \"useCustomCountFn\": false,\n    \"forceCountFn\":
                false,\n    \"read\": {},\n    \"options\": {}\n  },\n 
                \"isCountOnly\": false\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - userId: 6548dc17f300e1706f3b8577
                      roleId: 6548dc17f300e1706f3b8578
                      id: 6548dc17f300e1706f3b857c
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-06-04T16:51:26.502Z'
                      updatedAt: '2023-11-25T02:53:54.350Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/userrole/count:
    post:
      tags:
        - admin > userRole
      summary: getuserRoleCount
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"where\": {\n    \"isActive\": true\n  }\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/userrole/deleteMany:
    post:
      tags:
        - admin > userRole
      summary: deleteManyuserRole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"isWarning\": true,\n  \"ids\": [\n    \":id\"\n  ]\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/userrole/updateBulk:
    put:
      tags:
        - admin > userRole
      summary: updateBulkuserRole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"filter\": {\n    \"isActive\": true\n  },\n  \"data\":
                {\n    \"isDeleted\": false\n  }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/userrole/softDeleteMany:
    put:
      tags:
        - admin > userRole
      summary: softDeleteManyuserRole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"ids\": [\n    \":id\"\n  ]\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/userrole/softDelete/{id}:
    put:
      tags:
        - admin > userRole
      summary: softDeleteuserRole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/userrole/partial-update/{id}:
    put:
      tags:
        - admin > userRole
      summary: partialupdateuserRole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"isActive\": true,\n  \"isDeleted\": false\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 6548dc17f300e1706f3b8577
                  roleId: 6548dc17f300e1706f3b8578
                  id: 6548dc17f300e1706f3b857e
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-06-04T16:51:26.502Z'
                  updatedAt: '2023-11-25T02:53:54.350Z'
  /admin/userrole/update/{id}:
    put:
      tags:
        - admin > userRole
      summary: updateuserRole
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"userId\": \"6548dc17f300e1706f3b8577\",\n  \"roleId\":
                \"6548dc17f300e1706f3b8578\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 6548dc17f300e1706f3b8577
                  roleId: 6548dc17f300e1706f3b8578
                  id: 6548dc17f300e1706f3b857f
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-06-04T16:51:26.502Z'
                  updatedAt: '2023-11-25T02:53:54.350Z'
  /admin/userrole/delete/{id}:
    delete:
      tags:
        - admin > userRole
      summary: deleteuserRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /device/api/v1/card/{id}:
    get:
      tags:
        - device > card
      summary: getcard
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Marjorie Wunsch
                  string: Agent
                  expirationDate: '2024-04-14T04:33:56.761Z'
                  userID: Brazilian
                  cardType: Bedfordshire
                  status: Land
                  isDefault: false
                  id: 6548dc17f300e1706f3b8539
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-07T06:48:36.314Z'
                  updatedAt: '2023-12-20T04:05:58.099Z'
  /device/api/v1/card/create:
    post:
      tags:
        - device > card
      summary: addcard
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"name\": \"Marjorie Wunsch\",\n  \"string\":
                \"Agent\",\n  \"expirationDate\":
                \"2024-04-14T04:33:56.761Z\",\n  \"userID\": \"Brazilian\",\n 
                \"cardType\": \"Bedfordshire\",\n  \"status\": \"Land\",\n 
                \"isDefault\": false\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Marjorie Wunsch
                  string: Agent
                  expirationDate: '2024-04-14T04:33:56.761Z'
                  userID: Brazilian
                  cardType: Bedfordshire
                  status: Land
                  isDefault: false
                  id: 6548dc17f300e1706f3b8537
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-07T06:48:36.314Z'
                  updatedAt: '2023-12-20T04:05:58.099Z'
  /device/api/v1/card/list:
    post:
      tags:
        - device > card
      summary: findAllcard
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"query\": {},\n  \"options\": {\n    \"select\": [\n     
                \"field 1\",\n      \"field 2\"\n    ],\n    \"collation\":
                \"\",\n    \"sort\": \"\",\n    \"populate\": \"\",\n   
                \"projection\": \"\",\n    \"lean\": false,\n    \"leanWithId\":
                true,\n    \"offset\": 0,\n    \"page\": 1,\n    \"limit\":
                10,\n    \"pagination\": true,\n    \"useEstimatedCount\":
                false,\n    \"useCustomCountFn\": false,\n    \"forceCountFn\":
                false,\n    \"read\": {},\n    \"options\": {}\n  },\n 
                \"isCountOnly\": false\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Marjorie Wunsch
                      string: Agent
                      expirationDate: '2024-04-14T04:33:56.761Z'
                      userID: Brazilian
                      cardType: Bedfordshire
                      status: Land
                      isDefault: false
                      id: 6548dc17f300e1706f3b8538
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-07-07T06:48:36.314Z'
                      updatedAt: '2023-12-20T04:05:58.099Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /device/api/v1/card/count:
    post:
      tags:
        - device > card
      summary: getcardCount
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"where\": {\n    \"isActive\": true\n  }\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /device/api/v1/card/addBulk:
    post:
      tags:
        - device > card
      summary: insertBulkcard
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"data\": [\n    {\n      \"name\": \"Marjorie
                Wunsch\",\n      \"string\": \"Agent\",\n     
                \"expirationDate\": \"2024-04-14T04:33:56.761Z\",\n     
                \"userID\": \"Brazilian\",\n      \"cardType\":
                \"Bedfordshire\",\n      \"status\": \"Land\",\n     
                \"isDefault\": false\n    }\n  ]\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/card/deleteMany:
    post:
      tags:
        - device > card
      summary: deleteManycard
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"isWarning\": true,\n  \"ids\": [\n    \":id\"\n  ]\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/card/update/{id}:
    put:
      tags:
        - device > card
      summary: updatecard
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"name\": \"Marjorie Wunsch\",\n  \"string\":
                \"Agent\",\n  \"expirationDate\":
                \"2024-04-14T04:33:56.761Z\",\n  \"userID\": \"Brazilian\",\n 
                \"cardType\": \"Bedfordshire\",\n  \"status\": \"Land\",\n 
                \"isDefault\": false\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Marjorie Wunsch
                  string: Agent
                  expirationDate: '2024-04-14T04:33:56.761Z'
                  userID: Brazilian
                  cardType: Bedfordshire
                  status: Land
                  isDefault: false
                  id: 6548dc17f300e1706f3b853a
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-07T06:48:36.314Z'
                  updatedAt: '2023-12-20T04:05:58.099Z'
  /device/api/v1/card/partial-update/{id}:
    put:
      tags:
        - device > card
      summary: partialupdatecard
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"isActive\": true,\n  \"isDeleted\": false\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Marjorie Wunsch
                  string: Agent
                  expirationDate: '2024-04-14T04:33:56.761Z'
                  userID: Brazilian
                  cardType: Bedfordshire
                  status: Land
                  isDefault: false
                  id: 6548dc17f300e1706f3b853b
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-07T06:48:36.314Z'
                  updatedAt: '2023-12-20T04:05:58.099Z'
  /device/api/v1/card/softDelete/{id}:
    put:
      tags:
        - device > card
      summary: softDeletecard
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/card/softDeleteMany:
    put:
      tags:
        - device > card
      summary: softDeleteManycard
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"ids\": [\n    \":id\"\n  ]\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/card/updateBulk:
    put:
      tags:
        - device > card
      summary: updateBulkcard
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"filter\": {\n    \"isActive\": true\n  },\n  \"data\":
                {\n    \"isDeleted\": false\n  }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/card/delete/{id}:
    delete:
      tags:
        - device > card
      summary: deletecard
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /device/auth/login/github:
    get:
      tags:
        - device > Social Login
      summary: Social Login through github
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /device/api/v1/upload:
    post:
      tags:
        - device > File Upload
      summary: File upload in device
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: string
                  description: Select file/s to upload
                  format: binary
                folder:
                  type: string
                  description: Optional, enable to upload file to specific folder
                  example: Enter foldername
                fileName:
                  type: string
                  description: Optional, enable to give Specific file name to uploaded File
                  example: Enter fileName
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  - status: true
                    path: path to download file
  /device/api/v1/customer/{id}:
    get:
      tags:
        - device > Customer
      summary: getCustomer
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  firstName: Ira Lesch
                  lastName: Kristine Okuneva
                  name: Johnnie Paucek
                  profile: maximize
                  contactNumber: Regional
                  email: Prince_Pacocha@hotmail.com
                  id: 6548dc17f300e1706f3b8548
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-03-13T21:42:23.666Z'
                  updatedAt: '2024-03-05T03:59:14.602Z'
  /device/api/v1/customer/create:
    post:
      tags:
        - device > Customer
      summary: addCustomer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"firstName\": \"Ira Lesch\",\n  \"lastName\": \"Kristine
                Okuneva\",\n  \"name\": \"Johnnie Paucek\",\n  \"profile\":
                \"maximize\",\n  \"contactNumber\": \"Regional\",\n  \"email\":
                \"Prince_Pacocha@hotmail.com\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  firstName: Ira Lesch
                  lastName: Kristine Okuneva
                  name: Johnnie Paucek
                  profile: maximize
                  contactNumber: Regional
                  email: Prince_Pacocha@hotmail.com
                  id: 6548dc17f300e1706f3b8546
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-03-13T21:42:23.666Z'
                  updatedAt: '2024-03-05T03:59:14.602Z'
  /device/api/v1/customer/list:
    post:
      tags:
        - device > Customer
      summary: findAllCustomer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"query\": {},\n  \"options\": {\n    \"select\": [\n     
                \"field 1\",\n      \"field 2\"\n    ],\n    \"collation\":
                \"\",\n    \"sort\": \"\",\n    \"populate\": \"\",\n   
                \"projection\": \"\",\n    \"lean\": false,\n    \"leanWithId\":
                true,\n    \"offset\": 0,\n    \"page\": 1,\n    \"limit\":
                10,\n    \"pagination\": true,\n    \"useEstimatedCount\":
                false,\n    \"useCustomCountFn\": false,\n    \"forceCountFn\":
                false,\n    \"read\": {},\n    \"options\": {}\n  },\n 
                \"isCountOnly\": false\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - firstName: Ira Lesch
                      lastName: Kristine Okuneva
                      name: Johnnie Paucek
                      profile: maximize
                      contactNumber: Regional
                      email: Prince_Pacocha@hotmail.com
                      id: 6548dc17f300e1706f3b8547
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-03-13T21:42:23.666Z'
                      updatedAt: '2024-03-05T03:59:14.602Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /device/api/v1/customer/count:
    post:
      tags:
        - device > Customer
      summary: getCustomerCount
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"where\": {\n    \"isActive\": true\n  }\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /device/api/v1/customer/addBulk:
    post:
      tags:
        - device > Customer
      summary: insertBulkCustomer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"data\": [\n    {\n      \"firstName\": \"Ira
                Lesch\",\n      \"lastName\": \"Kristine Okuneva\",\n     
                \"name\": \"Johnnie Paucek\",\n      \"profile\":
                \"maximize\",\n      \"contactNumber\": \"Regional\",\n     
                \"email\": \"Prince_Pacocha@hotmail.com\"\n    }\n  ]\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/customer/deleteMany:
    post:
      tags:
        - device > Customer
      summary: deleteManyCustomer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"isWarning\": true,\n  \"ids\": [\n    \":id\"\n  ]\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/customer/update/{id}:
    put:
      tags:
        - device > Customer
      summary: updateCustomer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"firstName\": \"Ira Lesch\",\n  \"lastName\": \"Kristine
                Okuneva\",\n  \"name\": \"Johnnie Paucek\",\n  \"profile\":
                \"maximize\",\n  \"contactNumber\": \"Regional\",\n  \"email\":
                \"Prince_Pacocha@hotmail.com\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  firstName: Ira Lesch
                  lastName: Kristine Okuneva
                  name: Johnnie Paucek
                  profile: maximize
                  contactNumber: Regional
                  email: Prince_Pacocha@hotmail.com
                  id: 6548dc17f300e1706f3b8549
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-03-13T21:42:23.666Z'
                  updatedAt: '2024-03-05T03:59:14.602Z'
  /device/api/v1/customer/partial-update/{id}:
    put:
      tags:
        - device > Customer
      summary: partialupdateCustomer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"isActive\": true,\n  \"isDeleted\": false\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  firstName: Ira Lesch
                  lastName: Kristine Okuneva
                  name: Johnnie Paucek
                  profile: maximize
                  contactNumber: Regional
                  email: Prince_Pacocha@hotmail.com
                  id: 6548dc17f300e1706f3b854a
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-03-13T21:42:23.666Z'
                  updatedAt: '2024-03-05T03:59:14.602Z'
  /device/api/v1/customer/softDelete/{id}:
    put:
      tags:
        - device > Customer
      summary: softDeleteCustomer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/customer/softDeleteMany:
    put:
      tags:
        - device > Customer
      summary: softDeleteManyCustomer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"ids\": [\n    \":id\"\n  ]\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/customer/updateBulk:
    put:
      tags:
        - device > Customer
      summary: updateBulkCustomer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"filter\": {\n    \"isActive\": true\n  },\n  \"data\":
                {\n    \"isDeleted\": false\n  }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/customer/delete/{id}:
    delete:
      tags:
        - device > Customer
      summary: deleteCustomer
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /device/api/v1/user/me:
    get:
      tags:
        - device > user
      summary: get loggedin User
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Elyssa51
                  email: Harold.Bauch@gmail.com
                  name: Curtis Wuckert
                  mobileNo: (241) 363-8274
                  userType: 1
                  id: 6548dc17f300e1706f3b8559
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-12-04T12:43:19.842Z'
                  updatedAt: '2024-05-19T18:38:43.787Z'
  /device/api/v1/user/update-profile:
    put:
      tags:
        - device > user
      summary: updateProfile
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"username\": \"Elyssa51\",\n  \"password\":
                \"K8aIcHj8LCJKLta\",\n  \"email\":
                \"Harold.Bauch@gmail.com\",\n  \"name\": \"Curtis Wuckert\",\n 
                \"mobileNo\": \"(241) 363-8274\",\n  \"userType\": 1\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Elyssa51
                  email: Harold.Bauch@gmail.com
                  name: Curtis Wuckert
                  mobileNo: (241) 363-8274
                  userType: 1
                  id: 6548dc17f300e1706f3b8558
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-12-04T12:43:19.842Z'
                  updatedAt: '2024-05-19T18:38:43.787Z'
  /device/auth/login:
    post:
      tags:
        - device > login
      summary: Login in device
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"username\": \"username\",\n  \"password\":
                \"password\"\n}"
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Login Successful
                data:
                  username: Elyssa51
                  email: Harold.Bauch@gmail.com
                  name: Curtis Wuckert
                  mobileNo: (241) 363-8274
                  id: 6548dc17f300e1706f3b855a
                  loginRetryLimit: 0
                  token: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMWRlZDVjMGFjMjAxMmFjMDI4ODkxZiIsInVzZXJuYW1lIjoiYWRtaW4iLCJpYXQiOjE2MjkzNTEyNzAsImV4cCI6MTYyOTk1MTI3MH0.BJ-WKjNYeFDQ4pn8kfli5gwn6GLz_c3voFht20Agj9k
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-12-14T05:31:33.519Z'
                  updatedAt: '2024-07-10T05:25:39.501Z'
  /device/auth/register:
    post:
      tags:
        - device > login
      summary: Register User in device
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"username\": \"Elyssa51\",\n  \"password\":
                \"K8aIcHj8LCJKLta\",\n  \"email\":
                \"Harold.Bauch@gmail.com\",\n  \"name\": \"Curtis Wuckert\",\n 
                \"mobileNo\": \"(241) 363-8274\"\n}"
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Elyssa51
                  email: Harold.Bauch@gmail.com
                  name: Curtis Wuckert
                  mobileNo: (241) 363-8274
                  id: 6548dc17f300e1706f3b855a
                  loginRetryLimit: 0
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-12-14T05:31:33.519Z'
                  updatedAt: '2024-07-10T05:25:39.501Z'
  /device/auth/forgot-password:
    post:
      tags:
        - device > login
      summary: Forgot Password in device
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"email\": \"yourmail@gmail.com\"\n}"'
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: otp successfully send to your email.
                data: {}
  /device/auth/validate-otp:
    post:
      tags:
        - device > login
      summary: Validate OTP in device
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"otp\": \"5898\"\n}"'
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Invalid OTP
                data: {}
  /device/auth/logout:
    post:
      tags:
        - device > login
      summary: Logout in device
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /device/api/v1/user/change-password:
    put:
      tags:
        - device > login
      summary: Change Password in device
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"oldPassword\": \"OldPassword\",\n  \"newPassword\":
                \"NewPassword\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Password changed successfully
                data: {}
  /device/auth/reset-password:
    put:
      tags:
        - device > login
      summary: Reset password in device
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"code\": \"5898\",\n  \"newPassword\":
                \"yourPassword\"\n}"
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Password reset successfully
                data: {}
